=======================================================
Program (C Code)
=======================================================
void main() {
    int T1 = 1, T2 = 2;

    if(T1 == 1) T2 = 1;
    else T1 = 2;
}


=======================================================
Explanation
=======================================================
Here at the end of the program T1 and T2 must be 
equivalent.


=======================================================
Program (LLVM Pseudo Code)
=======================================================
T1 <- 1
T2 <- 2
T3 <- T1
T4 <- T4 == 1
if T4 then goto BB2 
      else goto BB3

BB2:
    T2 <- 1
    goto BB4

BB4:
    T1 <- 2
    goto BB4

BB4:


=======================================================
Expected Result
=======================================================

====================================================================================================
Renamed Code
====================================================================================================
BasicBlock: BB1		[Predecessors: ]
  %T1 = alloca i32, align 4
  %T2 = alloca i32, align 4
  store i32 1, i32* %T1, align 4
  store i32 2, i32* %T2, align 4
  %T3 = load i32, i32* %T1, align 4
  %T4 = icmp eq i32 %T3, 1
  br i1 %T4, label %BB2, label %BB3

BasicBlock: BB2		[Predecessors: BB1 ]
  store i32 1, i32* %T2, align 4
  br label %BB4

BasicBlock: BB3		[Predecessors: BB1 ]
  store i32 2, i32* %T1, align 4
  br label %BB4

BasicBlock: BB4		[Predecessors: BB3 BB2 ]
  ret void



====================================================================================================
Herbrand Equivalence Computation
====================================================================================================


====================================================================================================
Iteration 1
====================================================================================================
Start of basic block BB1		[Confluence of ]
[]{T4}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T4 + T4}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{1 + T4}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{2 + T4}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{T1 + T4}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T2 + T4}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T3 + T4}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, 

  %T1 = alloca i32, align 4
[]{T4}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T4 + T4}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{1 + T4}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{2 + T4}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{T1 + T4}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T2 + T4}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T3 + T4}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, 

  %T2 = alloca i32, align 4
[]{T4}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T4 + T4}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{1 + T4}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{2 + T4}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{T1 + T4}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T2 + T4}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T3 + T4}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, 

  store i32 1, i32* %T1, align 4
[]{T4}, [1]{1, T1}, [2]{2}, []{T2}, []{T3}, []{T4 + T4}, []{T4 + 1, T4 + T1}, []{T4 + 2}, []{T4 + T2}, []{T4 + T3}, []{1 + T4, T1 + T4}, [2]{1 + 1, 1 + T1, T1 + 1, T1 + T1}, [3]{1 + 2, T1 + 2}, []{1 + T2, T1 + T2}, []{1 + T3, T1 + T3}, []{2 + T4}, [3]{2 + 1, 2 + T1}, [4]{2 + 2}, []{2 + T2}, []{2 + T3}, []{T2 + T4}, []{T2 + 1, T2 + T1}, []{T2 + 2}, []{T2 + T2}, []{T2 + T3}, []{T3 + T4}, []{T3 + 1, T3 + T1}, []{T3 + 2}, []{T3 + T2}, []{T3 + T3}, 

  store i32 2, i32* %T2, align 4
[]{T4}, [1]{1, T1}, [2]{2, T2}, []{T3}, []{T4 + T4}, []{T4 + 1, T4 + T1}, []{T4 + 2, T4 + T2}, []{T4 + T3}, []{1 + T4, T1 + T4}, [2]{1 + 1, 1 + T1, T1 + 1, T1 + T1}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2}, []{1 + T3, T1 + T3}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, T2 + 1, T2 + T1}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, []{2 + T3, T2 + T3}, []{T3 + T4}, []{T3 + 1, T3 + T1}, []{T3 + 2, T3 + T2}, []{T3 + T3}, 

  %T3 = load i32, i32* %T1, align 4
[]{T4}, [1]{1, T1, T3}, [2]{2, T2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2, T4 + T2}, []{1 + T4, T1 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2, T3 + 2, T3 + T2}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, 2 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, 

  %T4 = icmp eq i32 %T3, 1
[]{T4}, [1]{1, T1, T3}, [2]{2, T2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2, T4 + T2}, []{1 + T4, T1 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2, T3 + 2, T3 + T2}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, 2 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, 

  br i1 %T4, label %BB2, label %BB3
[]{T4}, [1]{1, T1, T3}, [2]{2, T2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2, T4 + T2}, []{1 + T4, T1 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2, T3 + 2, T3 + T2}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, 2 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, 

Start of basic block BB2		[Confluence of BB1 ]
[]{T4}, [1]{1, T1, T3}, [2]{2, T2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2, T4 + T2}, []{1 + T4, T1 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2, T3 + 2, T3 + T2}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, 2 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, 

  store i32 1, i32* %T2, align 4
[]{T4}, [1]{1, T1, T2, T3}, [2]{2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T2, T4 + T3}, []{T4 + 2}, []{1 + T4, T1 + T4, T2 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T2, 1 + T3, T1 + 1, T1 + T1, T1 + T2, T1 + T3, T2 + 1, T2 + T1, T2 + T2, T2 + T3, T3 + 1, T3 + T1, T3 + T2, T3 + T3}, [3]{1 + 2, T1 + 2, T2 + 2, T3 + 2}, []{2 + T4}, [3]{2 + 1, 2 + T1, 2 + T2, 2 + T3}, [4]{2 + 2}, 

  br label %BB4
[]{T4}, [1]{1, T1, T2, T3}, [2]{2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T2, T4 + T3}, []{T4 + 2}, []{1 + T4, T1 + T4, T2 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T2, 1 + T3, T1 + 1, T1 + T1, T1 + T2, T1 + T3, T2 + 1, T2 + T1, T2 + T2, T2 + T3, T3 + 1, T3 + T1, T3 + T2, T3 + T3}, [3]{1 + 2, T1 + 2, T2 + 2, T3 + 2}, []{2 + T4}, [3]{2 + 1, 2 + T1, 2 + T2, 2 + T3}, [4]{2 + 2}, 

Start of basic block BB3		[Confluence of BB1 ]
[]{T4}, [1]{1, T1, T3}, [2]{2, T2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2, T4 + T2}, []{1 + T4, T1 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2, T3 + 2, T3 + T2}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, 2 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, 

  store i32 2, i32* %T1, align 4
[]{T4}, [1]{1, T3}, [2]{2, T1, T2}, []{T4 + T4}, []{T4 + 1, T4 + T3}, []{T4 + 2, T4 + T1, T4 + T2}, []{1 + T4, T3 + T4}, [2]{1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{1 + 2, 1 + T1, 1 + T2, T3 + 2, T3 + T1, T3 + T2}, []{2 + T4, T1 + T4, T2 + T4}, [3]{2 + 1, 2 + T3, T1 + 1, T1 + T3, T2 + 1, T2 + T3}, [4]{2 + 2, 2 + T1, 2 + T2, T1 + 2, T1 + T1, T1 + T2, T2 + 2, T2 + T1, T2 + T2}, 

  br label %BB4
[]{T4}, [1]{1, T3}, [2]{2, T1, T2}, []{T4 + T4}, []{T4 + 1, T4 + T3}, []{T4 + 2, T4 + T1, T4 + T2}, []{1 + T4, T3 + T4}, [2]{1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{1 + 2, 1 + T1, 1 + T2, T3 + 2, T3 + T1, T3 + T2}, []{2 + T4, T1 + T4, T2 + T4}, [3]{2 + 1, 2 + T3, T1 + 1, T1 + T3, T2 + 1, T2 + T3}, [4]{2 + 2, 2 + T1, 2 + T2, T1 + 2, T1 + T1, T1 + T2, T2 + 2, T2 + T1, T2 + T2}, 

Start of basic block BB4		[Confluence of BB3 BB2 ]
[]{T4}, [1]{1, T3}, [2]{2}, []{T1, T2}, []{T4 + T4}, []{T4 + 1, T4 + T3}, []{T4 + 2}, []{T4 + T1, T4 + T2}, []{1 + T4, T3 + T4}, [2]{1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{1 + 2, T3 + 2}, []{1 + T1, 1 + T2, T3 + T1, T3 + T2}, []{2 + T4}, [3]{2 + 1, 2 + T3}, [4]{2 + 2}, []{2 + T1, 2 + T2}, []{T1 + T4, T2 + T4}, []{T1 + 1, T1 + T3, T2 + 1, T2 + T3}, []{T1 + 2, T2 + 2}, []{T1 + T1, T1 + T2, T2 + T1, T2 + T2}, 

  ret void
[]{T4}, [1]{1, T3}, [2]{2}, []{T1, T2}, []{T4 + T4}, []{T4 + 1, T4 + T3}, []{T4 + 2}, []{T4 + T1, T4 + T2}, []{1 + T4, T3 + T4}, [2]{1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{1 + 2, T3 + 2}, []{1 + T1, 1 + T2, T3 + T1, T3 + T2}, []{2 + T4}, [3]{2 + 1, 2 + T3}, [4]{2 + 2}, []{2 + T1, 2 + T2}, []{T1 + T4, T2 + T4}, []{T1 + 1, T1 + T3, T2 + 1, T2 + T3}, []{T1 + 2, T2 + 2}, []{T1 + T1, T1 + T2, T2 + T1, T2 + T2}, 

====================================================================================================
Iteration 2
====================================================================================================
Start of basic block BB1		[Confluence of ]
[]{T4}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T4 + T4}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{1 + T4}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{2 + T4}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{T1 + T4}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T2 + T4}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T3 + T4}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, 

  %T1 = alloca i32, align 4
[]{T4}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T4 + T4}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{1 + T4}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{2 + T4}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{T1 + T4}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T2 + T4}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T3 + T4}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, 

  %T2 = alloca i32, align 4
[]{T4}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T4 + T4}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{1 + T4}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{2 + T4}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{T1 + T4}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T2 + T4}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T3 + T4}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, 

  store i32 1, i32* %T1, align 4
[]{T4}, [1]{1, T1}, [2]{2}, []{T2}, []{T3}, []{T4 + T4}, []{T4 + 1, T4 + T1}, []{T4 + 2}, []{T4 + T2}, []{T4 + T3}, []{1 + T4, T1 + T4}, [2]{1 + 1, 1 + T1, T1 + 1, T1 + T1}, [3]{1 + 2, T1 + 2}, []{1 + T2, T1 + T2}, []{1 + T3, T1 + T3}, []{2 + T4}, [3]{2 + 1, 2 + T1}, [4]{2 + 2}, []{2 + T2}, []{2 + T3}, []{T2 + T4}, []{T2 + 1, T2 + T1}, []{T2 + 2}, []{T2 + T2}, []{T2 + T3}, []{T3 + T4}, []{T3 + 1, T3 + T1}, []{T3 + 2}, []{T3 + T2}, []{T3 + T3}, 

  store i32 2, i32* %T2, align 4
[]{T4}, [1]{1, T1}, [2]{2, T2}, []{T3}, []{T4 + T4}, []{T4 + 1, T4 + T1}, []{T4 + 2, T4 + T2}, []{T4 + T3}, []{1 + T4, T1 + T4}, [2]{1 + 1, 1 + T1, T1 + 1, T1 + T1}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2}, []{1 + T3, T1 + T3}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, T2 + 1, T2 + T1}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, []{2 + T3, T2 + T3}, []{T3 + T4}, []{T3 + 1, T3 + T1}, []{T3 + 2, T3 + T2}, []{T3 + T3}, 

  %T3 = load i32, i32* %T1, align 4
[]{T4}, [1]{1, T1, T3}, [2]{2, T2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2, T4 + T2}, []{1 + T4, T1 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2, T3 + 2, T3 + T2}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, 2 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, 

  %T4 = icmp eq i32 %T3, 1
[]{T4}, [1]{1, T1, T3}, [2]{2, T2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2, T4 + T2}, []{1 + T4, T1 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2, T3 + 2, T3 + T2}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, 2 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, 

  br i1 %T4, label %BB2, label %BB3
[]{T4}, [1]{1, T1, T3}, [2]{2, T2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2, T4 + T2}, []{1 + T4, T1 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2, T3 + 2, T3 + T2}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, 2 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, 

Start of basic block BB2		[Confluence of BB1 ]
[]{T4}, [1]{1, T1, T3}, [2]{2, T2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2, T4 + T2}, []{1 + T4, T1 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2, T3 + 2, T3 + T2}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, 2 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, 

  store i32 1, i32* %T2, align 4
[]{T4}, [1]{1, T1, T2, T3}, [2]{2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T2, T4 + T3}, []{T4 + 2}, []{1 + T4, T1 + T4, T2 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T2, 1 + T3, T1 + 1, T1 + T1, T1 + T2, T1 + T3, T2 + 1, T2 + T1, T2 + T2, T2 + T3, T3 + 1, T3 + T1, T3 + T2, T3 + T3}, [3]{1 + 2, T1 + 2, T2 + 2, T3 + 2}, []{2 + T4}, [3]{2 + 1, 2 + T1, 2 + T2, 2 + T3}, [4]{2 + 2}, 

  br label %BB4
[]{T4}, [1]{1, T1, T2, T3}, [2]{2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T2, T4 + T3}, []{T4 + 2}, []{1 + T4, T1 + T4, T2 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T2, 1 + T3, T1 + 1, T1 + T1, T1 + T2, T1 + T3, T2 + 1, T2 + T1, T2 + T2, T2 + T3, T3 + 1, T3 + T1, T3 + T2, T3 + T3}, [3]{1 + 2, T1 + 2, T2 + 2, T3 + 2}, []{2 + T4}, [3]{2 + 1, 2 + T1, 2 + T2, 2 + T3}, [4]{2 + 2}, 

Start of basic block BB3		[Confluence of BB1 ]
[]{T4}, [1]{1, T1, T3}, [2]{2, T2}, []{T4 + T4}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2, T4 + T2}, []{1 + T4, T1 + T4, T3 + T4}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, 1 + T2, T1 + 2, T1 + T2, T3 + 2, T3 + T2}, []{2 + T4, T2 + T4}, [3]{2 + 1, 2 + T1, 2 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{2 + 2, 2 + T2, T2 + 2, T2 + T2}, 

  store i32 2, i32* %T1, align 4
[]{T4}, [1]{1, T3}, [2]{2, T1, T2}, []{T4 + T4}, []{T4 + 1, T4 + T3}, []{T4 + 2, T4 + T1, T4 + T2}, []{1 + T4, T3 + T4}, [2]{1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{1 + 2, 1 + T1, 1 + T2, T3 + 2, T3 + T1, T3 + T2}, []{2 + T4, T1 + T4, T2 + T4}, [3]{2 + 1, 2 + T3, T1 + 1, T1 + T3, T2 + 1, T2 + T3}, [4]{2 + 2, 2 + T1, 2 + T2, T1 + 2, T1 + T1, T1 + T2, T2 + 2, T2 + T1, T2 + T2}, 

  br label %BB4
[]{T4}, [1]{1, T3}, [2]{2, T1, T2}, []{T4 + T4}, []{T4 + 1, T4 + T3}, []{T4 + 2, T4 + T1, T4 + T2}, []{1 + T4, T3 + T4}, [2]{1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{1 + 2, 1 + T1, 1 + T2, T3 + 2, T3 + T1, T3 + T2}, []{2 + T4, T1 + T4, T2 + T4}, [3]{2 + 1, 2 + T3, T1 + 1, T1 + T3, T2 + 1, T2 + T3}, [4]{2 + 2, 2 + T1, 2 + T2, T1 + 2, T1 + T1, T1 + T2, T2 + 2, T2 + T1, T2 + T2}, 

Start of basic block BB4		[Confluence of BB3 BB2 ]
[]{T4}, [1]{1, T3}, [2]{2}, []{T1, T2}, []{T4 + T4}, []{T4 + 1, T4 + T3}, []{T4 + 2}, []{T4 + T1, T4 + T2}, []{1 + T4, T3 + T4}, [2]{1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{1 + 2, T3 + 2}, []{1 + T1, 1 + T2, T3 + T1, T3 + T2}, []{2 + T4}, [3]{2 + 1, 2 + T3}, [4]{2 + 2}, []{2 + T1, 2 + T2}, []{T1 + T4, T2 + T4}, []{T1 + 1, T1 + T3, T2 + 1, T2 + T3}, []{T1 + 2, T2 + 2}, []{T1 + T1, T1 + T2, T2 + T1, T2 + T2}, 

  ret void
[]{T4}, [1]{1, T3}, [2]{2}, []{T1, T2}, []{T4 + T4}, []{T4 + 1, T4 + T3}, []{T4 + 2}, []{T4 + T1, T4 + T2}, []{1 + T4, T3 + T4}, [2]{1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{1 + 2, T3 + 2}, []{1 + T1, 1 + T2, T3 + T1, T3 + T2}, []{2 + T4}, [3]{2 + 1, 2 + T3}, [4]{2 + 2}, []{2 + T1, 2 + T2}, []{T1 + T4, T2 + T4}, []{T1 + 1, T1 + T3, T2 + 1, T2 + T3}, []{T1 + 2, T2 + 2}, []{T1 + T1, T1 + T2, T2 + T1, T2 + T2}, 



====================================================================================================
Removing Redundant Instructions
====================================================================================================


  %T1 = alloca i32, align 4
  => Instruction skipped


  %T2 = alloca i32, align 4
  => Instruction skipped


  store i32 1, i32* %T1, align 4
  => Instruction skipped


  store i32 2, i32* %T2, align 4
  => Instruction skipped


  %T3 = load i32, i32* %T1, align 4
  => A constant expression
  => Instruction being deleted and replaced with : 1


  %T4 = icmp eq i32 1, 1
  => Instruction skipped


  br i1 %T4, label %BB2, label %BB3
  => Instruction skipped


  store i32 1, i32* %T2, align 4
  => Instruction skipped


  br label %BB4
  => Instruction skipped


  store i32 2, i32* %T1, align 4
  => Instruction skipped


  br label %BB4
  => Instruction skipped


  ret void
  => Instruction skipped


====================================================================================================
Optimised Code
====================================================================================================
BasicBlock: BB1		[Predecessors: ]
  %T1 = alloca i32, align 4
  %T2 = alloca i32, align 4
  store i32 1, i32* %T1, align 4
  store i32 2, i32* %T2, align 4
  %T4 = icmp eq i32 1, 1
  br i1 %T4, label %BB2, label %BB3

BasicBlock: BB2		[Predecessors: BB1 ]
  store i32 1, i32* %T2, align 4
  br label %BB4

BasicBlock: BB3		[Predecessors: BB1 ]
  store i32 2, i32* %T1, align 4
  br label %BB4

BasicBlock: BB4		[Predecessors: BB3 BB2 ]
  ret void
