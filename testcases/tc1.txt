=======================================================
Program (C Code)
=======================================================
void main() {
    int T1 = 1;
    int T2 = T1 + 1;
    T1 = 2;
    T2 = T1 + 1;
}


=======================================================
Explanation
=======================================================
A simple program to check the change of equivalence
class information.


=======================================================
Program (LLVM Pseudo Code)
=======================================================
T1 <- 1
T3 <- T1
T4 <- T3 + 1
T2 <- T4
T1 <- 2
T5 <- T1
T6 <- T5 + 1
T2 <- t6


=======================================================
Expected Result
=======================================================

====================================================================================================
Renamed Code
====================================================================================================
BasicBlock: BB1		[Predecessors: ]
  %T1 = alloca i32, align 4
  %T2 = alloca i32, align 4
  store i32 1, i32* %T1, align 4
  %T3 = load i32, i32* %T1, align 4
  %T4 = add nsw i32 %T3, 1
  store i32 %T4, i32* %T2, align 4
  store i32 2, i32* %T1, align 4
  %T5 = load i32, i32* %T1, align 4
  %T6 = add nsw i32 %T5, 1
  store i32 %T6, i32* %T2, align 4
  ret void



====================================================================================================
Herbrand Equivalence Computation
====================================================================================================


====================================================================================================
Iteration 1
====================================================================================================
Start of basic block BB1		[Confluence of ]
[]{T4}, []{T6}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T5}, []{T4 + T4}, []{T4 + T6}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1}, []{T6 + 2}, []{T6 + T1}, []{T6 + T2}, []{T6 + T3}, []{T6 + T5}, []{1 + T4}, []{1 + T6}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{1 + T5}, []{2 + T4}, []{2 + T6}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{2 + T5}, []{T1 + T4}, []{T1 + T6}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T1 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T2 + T5}, []{T3 + T4}, []{T3 + T6}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, []{T3 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1}, []{T5 + 2}, []{T5 + T1}, []{T5 + T2}, []{T5 + T3}, []{T5 + T5}, 

  %T1 = alloca i32, align 4
[]{T4}, []{T6}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T5}, []{T4 + T4}, []{T4 + T6}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1}, []{T6 + 2}, []{T6 + T1}, []{T6 + T2}, []{T6 + T3}, []{T6 + T5}, []{1 + T4}, []{1 + T6}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{1 + T5}, []{2 + T4}, []{2 + T6}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{2 + T5}, []{T1 + T4}, []{T1 + T6}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T1 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T2 + T5}, []{T3 + T4}, []{T3 + T6}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, []{T3 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1}, []{T5 + 2}, []{T5 + T1}, []{T5 + T2}, []{T5 + T3}, []{T5 + T5}, 

  %T2 = alloca i32, align 4
[]{T4}, []{T6}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T5}, []{T4 + T4}, []{T4 + T6}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1}, []{T6 + 2}, []{T6 + T1}, []{T6 + T2}, []{T6 + T3}, []{T6 + T5}, []{1 + T4}, []{1 + T6}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{1 + T5}, []{2 + T4}, []{2 + T6}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{2 + T5}, []{T1 + T4}, []{T1 + T6}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T1 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T2 + T5}, []{T3 + T4}, []{T3 + T6}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, []{T3 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1}, []{T5 + 2}, []{T5 + T1}, []{T5 + T2}, []{T5 + T3}, []{T5 + T5}, 

  store i32 1, i32* %T1, align 4
[]{T4}, []{T6}, [1]{1, T1}, [2]{2}, []{T2}, []{T3}, []{T5}, []{T4 + T4}, []{T4 + T6}, []{T4 + 1, T4 + T1}, []{T4 + 2}, []{T4 + T2}, []{T4 + T3}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1, T6 + T1}, []{T6 + 2}, []{T6 + T2}, []{T6 + T3}, []{T6 + T5}, []{1 + T4, T1 + T4}, []{1 + T6, T1 + T6}, [2]{1 + 1, 1 + T1, T1 + 1, T1 + T1}, [3]{1 + 2, T1 + 2}, []{1 + T2, T1 + T2}, []{1 + T3, T1 + T3}, []{1 + T5, T1 + T5}, []{2 + T4}, []{2 + T6}, [3]{2 + 1, 2 + T1}, [4]{2 + 2}, []{2 + T2}, []{2 + T3}, []{2 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1, T2 + T1}, []{T2 + 2}, []{T2 + T2}, []{T2 + T3}, []{T2 + T5}, []{T3 + T4}, []{T3 + T6}, []{T3 + 1, T3 + T1}, []{T3 + 2}, []{T3 + T2}, []{T3 + T3}, []{T3 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1, T5 + T1}, []{T5 + 2}, []{T5 + T2}, []{T5 + T3}, []{T5 + T5}, 

  %T3 = load i32, i32* %T1, align 4
[]{T4}, []{T6}, [1]{1, T1, T3}, [2]{2}, []{T2}, []{T5}, []{T4 + T4}, []{T4 + T6}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2}, []{T4 + T2}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1, T6 + T1, T6 + T3}, []{T6 + 2}, []{T6 + T2}, []{T6 + T5}, []{1 + T4, T1 + T4, T3 + T4}, []{1 + T6, T1 + T6, T3 + T6}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, T1 + 2, T3 + 2}, []{1 + T2, T1 + T2, T3 + T2}, []{1 + T5, T1 + T5, T3 + T5}, []{2 + T4}, []{2 + T6}, [3]{2 + 1, 2 + T1, 2 + T3}, [4]{2 + 2}, []{2 + T2}, []{2 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1, T2 + T1, T2 + T3}, []{T2 + 2}, []{T2 + T2}, []{T2 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1, T5 + T1, T5 + T3}, []{T5 + 2}, []{T5 + T2}, []{T5 + T5}, 

  %T4 = add nsw i32 %T3, 1
[2]{T4, 1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, []{T6}, [1]{1, T1, T3}, [2]{2}, []{T2}, []{T5}, [4]{T4 + T4}, []{T4 + T6}, [3]{T4 + 1, T4 + T1, T4 + T3}, [4]{T4 + 2}, []{T4 + T2}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1, T6 + T1, T6 + T3}, []{T6 + 2}, []{T6 + T2}, []{T6 + T5}, [3]{1 + T4, T1 + T4, T3 + T4}, []{1 + T6, T1 + T6, T3 + T6}, [3]{1 + 2, T1 + 2, T3 + 2}, []{1 + T2, T1 + T2, T3 + T2}, []{1 + T5, T1 + T5, T3 + T5}, [4]{2 + T4}, []{2 + T6}, [3]{2 + 1, 2 + T1, 2 + T3}, [4]{2 + 2}, []{2 + T2}, []{2 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1, T2 + T1, T2 + T3}, []{T2 + 2}, []{T2 + T2}, []{T2 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1, T5 + T1, T5 + T3}, []{T5 + 2}, []{T5 + T2}, []{T5 + T5}, 

  store i32 %T4, i32* %T2, align 4
[2]{T4, T2, 1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, []{T6}, [1]{1, T1, T3}, [2]{2}, []{T5}, [4]{T4 + T4, T4 + T2, T2 + T4, T2 + T2}, []{T4 + T6, T2 + T6}, [3]{T4 + 1, T4 + T1, T4 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{T4 + 2, T2 + 2}, []{T4 + T5, T2 + T5}, []{T6 + T4, T6 + T2}, []{T6 + T6}, []{T6 + 1, T6 + T1, T6 + T3}, []{T6 + 2}, []{T6 + T5}, [3]{1 + T4, 1 + T2, T1 + T4, T1 + T2, T3 + T4, T3 + T2}, []{1 + T6, T1 + T6, T3 + T6}, [3]{1 + 2, T1 + 2, T3 + 2}, []{1 + T5, T1 + T5, T3 + T5}, [4]{2 + T4, 2 + T2}, []{2 + T6}, [3]{2 + 1, 2 + T1, 2 + T3}, [4]{2 + 2}, []{2 + T5}, []{T5 + T4, T5 + T2}, []{T5 + T6}, []{T5 + 1, T5 + T1, T5 + T3}, []{T5 + 2}, []{T5 + T5}, 

  store i32 2, i32* %T1, align 4
[2]{T4, T2, 1 + 1, 1 + T3, T3 + 1, T3 + T3}, []{T6}, [1]{1, T3}, [2]{2, T1}, []{T5}, [4]{T4 + T4, T4 + T2, T2 + T4, T2 + T2}, []{T4 + T6, T2 + T6}, [3]{T4 + 1, T4 + T3, T2 + 1, T2 + T3}, [4]{T4 + 2, T4 + T1, T2 + 2, T2 + T1}, []{T4 + T5, T2 + T5}, []{T6 + T4, T6 + T2}, []{T6 + T6}, []{T6 + 1, T6 + T3}, []{T6 + 2, T6 + T1}, []{T6 + T5}, [3]{1 + T4, 1 + T2, T3 + T4, T3 + T2}, []{1 + T6, T3 + T6}, [3]{1 + 2, 1 + T1, T3 + 2, T3 + T1}, []{1 + T5, T3 + T5}, [4]{2 + T4, 2 + T2, T1 + T4, T1 + T2}, []{2 + T6, T1 + T6}, [3]{2 + 1, 2 + T3, T1 + 1, T1 + T3}, [4]{2 + 2, 2 + T1, T1 + 2, T1 + T1}, []{2 + T5, T1 + T5}, []{T5 + T4, T5 + T2}, []{T5 + T6}, []{T5 + 1, T5 + T3}, []{T5 + 2, T5 + T1}, []{T5 + T5}, 

  %T5 = load i32, i32* %T1, align 4
[2]{T4, T2, 1 + 1, 1 + T3, T3 + 1, T3 + T3}, []{T6}, [1]{1, T3}, [2]{2, T1, T5}, [4]{T4 + T4, T4 + T2, T2 + T4, T2 + T2}, []{T4 + T6, T2 + T6}, [3]{T4 + 1, T4 + T3, T2 + 1, T2 + T3}, [4]{T4 + 2, T4 + T1, T4 + T5, T2 + 2, T2 + T1, T2 + T5}, []{T6 + T4, T6 + T2}, []{T6 + T6}, []{T6 + 1, T6 + T3}, []{T6 + 2, T6 + T1, T6 + T5}, [3]{1 + T4, 1 + T2, T3 + T4, T3 + T2}, []{1 + T6, T3 + T6}, [3]{1 + 2, 1 + T1, 1 + T5, T3 + 2, T3 + T1, T3 + T5}, [4]{2 + T4, 2 + T2, T1 + T4, T1 + T2, T5 + T4, T5 + T2}, []{2 + T6, T1 + T6, T5 + T6}, [3]{2 + 1, 2 + T3, T1 + 1, T1 + T3, T5 + 1, T5 + T3}, [4]{2 + 2, 2 + T1, 2 + T5, T1 + 2, T1 + T1, T1 + T5, T5 + 2, T5 + T1, T5 + T5}, 

  %T6 = add nsw i32 %T5, 1
[2]{T4, T2, 1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{T6, 2 + 1, 2 + T3, T1 + 1, T1 + T3, T5 + 1, T5 + T3}, [1]{1, T3}, [2]{2, T1, T5}, [4]{T4 + T4, T4 + T2, T2 + T4, T2 + T2}, [5]{T4 + T6, T2 + T6}, [3]{T4 + 1, T4 + T3, T2 + 1, T2 + T3}, [4]{T4 + 2, T4 + T1, T4 + T5, T2 + 2, T2 + T1, T2 + T5}, [5]{T6 + T4, T6 + T2}, [6]{T6 + T6}, [4]{T6 + 1, T6 + T3}, [5]{T6 + 2, T6 + T1, T6 + T5}, [3]{1 + T4, 1 + T2, T3 + T4, T3 + T2}, [4]{1 + T6, T3 + T6}, [3]{1 + 2, 1 + T1, 1 + T5, T3 + 2, T3 + T1, T3 + T5}, [4]{2 + T4, 2 + T2, T1 + T4, T1 + T2, T5 + T4, T5 + T2}, [5]{2 + T6, T1 + T6, T5 + T6}, [4]{2 + 2, 2 + T1, 2 + T5, T1 + 2, T1 + T1, T1 + T5, T5 + 2, T5 + T1, T5 + T5}, 

  store i32 %T6, i32* %T2, align 4
[2]{T4, 1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{T6, T2, 2 + 1, 2 + T3, T1 + 1, T1 + T3, T5 + 1, T5 + T3}, [1]{1, T3}, [2]{2, T1, T5}, [4]{T4 + T4}, [5]{T4 + T6, T4 + T2}, [3]{T4 + 1, T4 + T3}, [4]{T4 + 2, T4 + T1, T4 + T5}, [5]{T6 + T4, T2 + T4}, [6]{T6 + T6, T6 + T2, T2 + T6, T2 + T2}, [4]{T6 + 1, T6 + T3, T2 + 1, T2 + T3}, [5]{T6 + 2, T6 + T1, T6 + T5, T2 + 2, T2 + T1, T2 + T5}, [3]{1 + T4, T3 + T4}, [4]{1 + T6, 1 + T2, T3 + T6, T3 + T2}, [3]{1 + 2, 1 + T1, 1 + T5, T3 + 2, T3 + T1, T3 + T5}, [4]{2 + T4, T1 + T4, T5 + T4}, [5]{2 + T6, 2 + T2, T1 + T6, T1 + T2, T5 + T6, T5 + T2}, [4]{2 + 2, 2 + T1, 2 + T5, T1 + 2, T1 + T1, T1 + T5, T5 + 2, T5 + T1, T5 + T5}, 

  ret void
[2]{T4, 1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{T6, T2, 2 + 1, 2 + T3, T1 + 1, T1 + T3, T5 + 1, T5 + T3}, [1]{1, T3}, [2]{2, T1, T5}, [4]{T4 + T4}, [5]{T4 + T6, T4 + T2}, [3]{T4 + 1, T4 + T3}, [4]{T4 + 2, T4 + T1, T4 + T5}, [5]{T6 + T4, T2 + T4}, [6]{T6 + T6, T6 + T2, T2 + T6, T2 + T2}, [4]{T6 + 1, T6 + T3, T2 + 1, T2 + T3}, [5]{T6 + 2, T6 + T1, T6 + T5, T2 + 2, T2 + T1, T2 + T5}, [3]{1 + T4, T3 + T4}, [4]{1 + T6, 1 + T2, T3 + T6, T3 + T2}, [3]{1 + 2, 1 + T1, 1 + T5, T3 + 2, T3 + T1, T3 + T5}, [4]{2 + T4, T1 + T4, T5 + T4}, [5]{2 + T6, 2 + T2, T1 + T6, T1 + T2, T5 + T6, T5 + T2}, [4]{2 + 2, 2 + T1, 2 + T5, T1 + 2, T1 + T1, T1 + T5, T5 + 2, T5 + T1, T5 + T5}, 

====================================================================================================
Iteration 2
====================================================================================================
Start of basic block BB1		[Confluence of ]
[]{T4}, []{T6}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T5}, []{T4 + T4}, []{T4 + T6}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1}, []{T6 + 2}, []{T6 + T1}, []{T6 + T2}, []{T6 + T3}, []{T6 + T5}, []{1 + T4}, []{1 + T6}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{1 + T5}, []{2 + T4}, []{2 + T6}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{2 + T5}, []{T1 + T4}, []{T1 + T6}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T1 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T2 + T5}, []{T3 + T4}, []{T3 + T6}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, []{T3 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1}, []{T5 + 2}, []{T5 + T1}, []{T5 + T2}, []{T5 + T3}, []{T5 + T5}, 

  %T1 = alloca i32, align 4
[]{T4}, []{T6}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T5}, []{T4 + T4}, []{T4 + T6}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1}, []{T6 + 2}, []{T6 + T1}, []{T6 + T2}, []{T6 + T3}, []{T6 + T5}, []{1 + T4}, []{1 + T6}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{1 + T5}, []{2 + T4}, []{2 + T6}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{2 + T5}, []{T1 + T4}, []{T1 + T6}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T1 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T2 + T5}, []{T3 + T4}, []{T3 + T6}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, []{T3 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1}, []{T5 + 2}, []{T5 + T1}, []{T5 + T2}, []{T5 + T3}, []{T5 + T5}, 

  %T2 = alloca i32, align 4
[]{T4}, []{T6}, [1]{1}, [2]{2}, []{T1}, []{T2}, []{T3}, []{T5}, []{T4 + T4}, []{T4 + T6}, []{T4 + 1}, []{T4 + 2}, []{T4 + T1}, []{T4 + T2}, []{T4 + T3}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1}, []{T6 + 2}, []{T6 + T1}, []{T6 + T2}, []{T6 + T3}, []{T6 + T5}, []{1 + T4}, []{1 + T6}, [2]{1 + 1}, [3]{1 + 2}, []{1 + T1}, []{1 + T2}, []{1 + T3}, []{1 + T5}, []{2 + T4}, []{2 + T6}, [3]{2 + 1}, [4]{2 + 2}, []{2 + T1}, []{2 + T2}, []{2 + T3}, []{2 + T5}, []{T1 + T4}, []{T1 + T6}, []{T1 + 1}, []{T1 + 2}, []{T1 + T1}, []{T1 + T2}, []{T1 + T3}, []{T1 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1}, []{T2 + 2}, []{T2 + T1}, []{T2 + T2}, []{T2 + T3}, []{T2 + T5}, []{T3 + T4}, []{T3 + T6}, []{T3 + 1}, []{T3 + 2}, []{T3 + T1}, []{T3 + T2}, []{T3 + T3}, []{T3 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1}, []{T5 + 2}, []{T5 + T1}, []{T5 + T2}, []{T5 + T3}, []{T5 + T5}, 

  store i32 1, i32* %T1, align 4
[]{T4}, []{T6}, [1]{1, T1}, [2]{2}, []{T2}, []{T3}, []{T5}, []{T4 + T4}, []{T4 + T6}, []{T4 + 1, T4 + T1}, []{T4 + 2}, []{T4 + T2}, []{T4 + T3}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1, T6 + T1}, []{T6 + 2}, []{T6 + T2}, []{T6 + T3}, []{T6 + T5}, []{1 + T4, T1 + T4}, []{1 + T6, T1 + T6}, [2]{1 + 1, 1 + T1, T1 + 1, T1 + T1}, [3]{1 + 2, T1 + 2}, []{1 + T2, T1 + T2}, []{1 + T3, T1 + T3}, []{1 + T5, T1 + T5}, []{2 + T4}, []{2 + T6}, [3]{2 + 1, 2 + T1}, [4]{2 + 2}, []{2 + T2}, []{2 + T3}, []{2 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1, T2 + T1}, []{T2 + 2}, []{T2 + T2}, []{T2 + T3}, []{T2 + T5}, []{T3 + T4}, []{T3 + T6}, []{T3 + 1, T3 + T1}, []{T3 + 2}, []{T3 + T2}, []{T3 + T3}, []{T3 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1, T5 + T1}, []{T5 + 2}, []{T5 + T2}, []{T5 + T3}, []{T5 + T5}, 

  %T3 = load i32, i32* %T1, align 4
[]{T4}, []{T6}, [1]{1, T1, T3}, [2]{2}, []{T2}, []{T5}, []{T4 + T4}, []{T4 + T6}, []{T4 + 1, T4 + T1, T4 + T3}, []{T4 + 2}, []{T4 + T2}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1, T6 + T1, T6 + T3}, []{T6 + 2}, []{T6 + T2}, []{T6 + T5}, []{1 + T4, T1 + T4, T3 + T4}, []{1 + T6, T1 + T6, T3 + T6}, [2]{1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, [3]{1 + 2, T1 + 2, T3 + 2}, []{1 + T2, T1 + T2, T3 + T2}, []{1 + T5, T1 + T5, T3 + T5}, []{2 + T4}, []{2 + T6}, [3]{2 + 1, 2 + T1, 2 + T3}, [4]{2 + 2}, []{2 + T2}, []{2 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1, T2 + T1, T2 + T3}, []{T2 + 2}, []{T2 + T2}, []{T2 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1, T5 + T1, T5 + T3}, []{T5 + 2}, []{T5 + T2}, []{T5 + T5}, 

  %T4 = add nsw i32 %T3, 1
[2]{T4, 1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, []{T6}, [1]{1, T1, T3}, [2]{2}, []{T2}, []{T5}, [4]{T4 + T4}, []{T4 + T6}, [3]{T4 + 1, T4 + T1, T4 + T3}, [4]{T4 + 2}, []{T4 + T2}, []{T4 + T5}, []{T6 + T4}, []{T6 + T6}, []{T6 + 1, T6 + T1, T6 + T3}, []{T6 + 2}, []{T6 + T2}, []{T6 + T5}, [3]{1 + T4, T1 + T4, T3 + T4}, []{1 + T6, T1 + T6, T3 + T6}, [3]{1 + 2, T1 + 2, T3 + 2}, []{1 + T2, T1 + T2, T3 + T2}, []{1 + T5, T1 + T5, T3 + T5}, [4]{2 + T4}, []{2 + T6}, [3]{2 + 1, 2 + T1, 2 + T3}, [4]{2 + 2}, []{2 + T2}, []{2 + T5}, []{T2 + T4}, []{T2 + T6}, []{T2 + 1, T2 + T1, T2 + T3}, []{T2 + 2}, []{T2 + T2}, []{T2 + T5}, []{T5 + T4}, []{T5 + T6}, []{T5 + 1, T5 + T1, T5 + T3}, []{T5 + 2}, []{T5 + T2}, []{T5 + T5}, 

  store i32 %T4, i32* %T2, align 4
[2]{T4, T2, 1 + 1, 1 + T1, 1 + T3, T1 + 1, T1 + T1, T1 + T3, T3 + 1, T3 + T1, T3 + T3}, []{T6}, [1]{1, T1, T3}, [2]{2}, []{T5}, [4]{T4 + T4, T4 + T2, T2 + T4, T2 + T2}, []{T4 + T6, T2 + T6}, [3]{T4 + 1, T4 + T1, T4 + T3, T2 + 1, T2 + T1, T2 + T3}, [4]{T4 + 2, T2 + 2}, []{T4 + T5, T2 + T5}, []{T6 + T4, T6 + T2}, []{T6 + T6}, []{T6 + 1, T6 + T1, T6 + T3}, []{T6 + 2}, []{T6 + T5}, [3]{1 + T4, 1 + T2, T1 + T4, T1 + T2, T3 + T4, T3 + T2}, []{1 + T6, T1 + T6, T3 + T6}, [3]{1 + 2, T1 + 2, T3 + 2}, []{1 + T5, T1 + T5, T3 + T5}, [4]{2 + T4, 2 + T2}, []{2 + T6}, [3]{2 + 1, 2 + T1, 2 + T3}, [4]{2 + 2}, []{2 + T5}, []{T5 + T4, T5 + T2}, []{T5 + T6}, []{T5 + 1, T5 + T1, T5 + T3}, []{T5 + 2}, []{T5 + T5}, 

  store i32 2, i32* %T1, align 4
[2]{T4, T2, 1 + 1, 1 + T3, T3 + 1, T3 + T3}, []{T6}, [1]{1, T3}, [2]{2, T1}, []{T5}, [4]{T4 + T4, T4 + T2, T2 + T4, T2 + T2}, []{T4 + T6, T2 + T6}, [3]{T4 + 1, T4 + T3, T2 + 1, T2 + T3}, [4]{T4 + 2, T4 + T1, T2 + 2, T2 + T1}, []{T4 + T5, T2 + T5}, []{T6 + T4, T6 + T2}, []{T6 + T6}, []{T6 + 1, T6 + T3}, []{T6 + 2, T6 + T1}, []{T6 + T5}, [3]{1 + T4, 1 + T2, T3 + T4, T3 + T2}, []{1 + T6, T3 + T6}, [3]{1 + 2, 1 + T1, T3 + 2, T3 + T1}, []{1 + T5, T3 + T5}, [4]{2 + T4, 2 + T2, T1 + T4, T1 + T2}, []{2 + T6, T1 + T6}, [3]{2 + 1, 2 + T3, T1 + 1, T1 + T3}, [4]{2 + 2, 2 + T1, T1 + 2, T1 + T1}, []{2 + T5, T1 + T5}, []{T5 + T4, T5 + T2}, []{T5 + T6}, []{T5 + 1, T5 + T3}, []{T5 + 2, T5 + T1}, []{T5 + T5}, 

  %T5 = load i32, i32* %T1, align 4
[2]{T4, T2, 1 + 1, 1 + T3, T3 + 1, T3 + T3}, []{T6}, [1]{1, T3}, [2]{2, T1, T5}, [4]{T4 + T4, T4 + T2, T2 + T4, T2 + T2}, []{T4 + T6, T2 + T6}, [3]{T4 + 1, T4 + T3, T2 + 1, T2 + T3}, [4]{T4 + 2, T4 + T1, T4 + T5, T2 + 2, T2 + T1, T2 + T5}, []{T6 + T4, T6 + T2}, []{T6 + T6}, []{T6 + 1, T6 + T3}, []{T6 + 2, T6 + T1, T6 + T5}, [3]{1 + T4, 1 + T2, T3 + T4, T3 + T2}, []{1 + T6, T3 + T6}, [3]{1 + 2, 1 + T1, 1 + T5, T3 + 2, T3 + T1, T3 + T5}, [4]{2 + T4, 2 + T2, T1 + T4, T1 + T2, T5 + T4, T5 + T2}, []{2 + T6, T1 + T6, T5 + T6}, [3]{2 + 1, 2 + T3, T1 + 1, T1 + T3, T5 + 1, T5 + T3}, [4]{2 + 2, 2 + T1, 2 + T5, T1 + 2, T1 + T1, T1 + T5, T5 + 2, T5 + T1, T5 + T5}, 

  %T6 = add nsw i32 %T5, 1
[2]{T4, T2, 1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{T6, 2 + 1, 2 + T3, T1 + 1, T1 + T3, T5 + 1, T5 + T3}, [1]{1, T3}, [2]{2, T1, T5}, [4]{T4 + T4, T4 + T2, T2 + T4, T2 + T2}, [5]{T4 + T6, T2 + T6}, [3]{T4 + 1, T4 + T3, T2 + 1, T2 + T3}, [4]{T4 + 2, T4 + T1, T4 + T5, T2 + 2, T2 + T1, T2 + T5}, [5]{T6 + T4, T6 + T2}, [6]{T6 + T6}, [4]{T6 + 1, T6 + T3}, [5]{T6 + 2, T6 + T1, T6 + T5}, [3]{1 + T4, 1 + T2, T3 + T4, T3 + T2}, [4]{1 + T6, T3 + T6}, [3]{1 + 2, 1 + T1, 1 + T5, T3 + 2, T3 + T1, T3 + T5}, [4]{2 + T4, 2 + T2, T1 + T4, T1 + T2, T5 + T4, T5 + T2}, [5]{2 + T6, T1 + T6, T5 + T6}, [4]{2 + 2, 2 + T1, 2 + T5, T1 + 2, T1 + T1, T1 + T5, T5 + 2, T5 + T1, T5 + T5}, 

  store i32 %T6, i32* %T2, align 4
[2]{T4, 1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{T6, T2, 2 + 1, 2 + T3, T1 + 1, T1 + T3, T5 + 1, T5 + T3}, [1]{1, T3}, [2]{2, T1, T5}, [4]{T4 + T4}, [5]{T4 + T6, T4 + T2}, [3]{T4 + 1, T4 + T3}, [4]{T4 + 2, T4 + T1, T4 + T5}, [5]{T6 + T4, T2 + T4}, [6]{T6 + T6, T6 + T2, T2 + T6, T2 + T2}, [4]{T6 + 1, T6 + T3, T2 + 1, T2 + T3}, [5]{T6 + 2, T6 + T1, T6 + T5, T2 + 2, T2 + T1, T2 + T5}, [3]{1 + T4, T3 + T4}, [4]{1 + T6, 1 + T2, T3 + T6, T3 + T2}, [3]{1 + 2, 1 + T1, 1 + T5, T3 + 2, T3 + T1, T3 + T5}, [4]{2 + T4, T1 + T4, T5 + T4}, [5]{2 + T6, 2 + T2, T1 + T6, T1 + T2, T5 + T6, T5 + T2}, [4]{2 + 2, 2 + T1, 2 + T5, T1 + 2, T1 + T1, T1 + T5, T5 + 2, T5 + T1, T5 + T5}, 

  ret void
[2]{T4, 1 + 1, 1 + T3, T3 + 1, T3 + T3}, [3]{T6, T2, 2 + 1, 2 + T3, T1 + 1, T1 + T3, T5 + 1, T5 + T3}, [1]{1, T3}, [2]{2, T1, T5}, [4]{T4 + T4}, [5]{T4 + T6, T4 + T2}, [3]{T4 + 1, T4 + T3}, [4]{T4 + 2, T4 + T1, T4 + T5}, [5]{T6 + T4, T2 + T4}, [6]{T6 + T6, T6 + T2, T2 + T6, T2 + T2}, [4]{T6 + 1, T6 + T3, T2 + 1, T2 + T3}, [5]{T6 + 2, T6 + T1, T6 + T5, T2 + 2, T2 + T1, T2 + T5}, [3]{1 + T4, T3 + T4}, [4]{1 + T6, 1 + T2, T3 + T6, T3 + T2}, [3]{1 + 2, 1 + T1, 1 + T5, T3 + 2, T3 + T1, T3 + T5}, [4]{2 + T4, T1 + T4, T5 + T4}, [5]{2 + T6, 2 + T2, T1 + T6, T1 + T2, T5 + T6, T5 + T2}, [4]{2 + 2, 2 + T1, 2 + T5, T1 + 2, T1 + T1, T1 + T5, T5 + 2, T5 + T1, T5 + T5}, 



====================================================================================================
Removing Redundant Instructions
====================================================================================================


  %T1 = alloca i32, align 4
  => Instruction skipped


  %T2 = alloca i32, align 4
  => Instruction skipped


  store i32 1, i32* %T1, align 4
  => Instruction skipped


  %T3 = load i32, i32* %T1, align 4
  => A constant expression
  => Instruction being deleted and replaced with : 1


  %T4 = add nsw i32 1, 1
  => A constant expression
  => Instruction being deleted and replaced with : 2


  store i32 2, i32* %T2, align 4
  => Instruction skipped


  store i32 2, i32* %T1, align 4
  => Instruction skipped


  %T5 = load i32, i32* %T1, align 4
  => A constant expression
  => Instruction being deleted and replaced with : 2


  %T6 = add nsw i32 2, 1
  => A constant expression
  => Instruction being deleted and replaced with : 3


  store i32 3, i32* %T2, align 4
  => Instruction skipped


  ret void
  => Instruction skipped


====================================================================================================
Optimised Code
====================================================================================================
BasicBlock: BB1		[Predecessors: ]
  %T1 = alloca i32, align 4
  %T2 = alloca i32, align 4
  store i32 1, i32* %T1, align 4
  store i32 2, i32* %T2, align 4
  store i32 2, i32* %T1, align 4
  store i32 3, i32* %T2, align 4
  ret void
