=======================================================
Program (C Code)
=======================================================
void main() {
    int T1 = 0;
    int T2 = 0;
    
    while(1) {
        T1 = 1;
    }
}


=======================================================
Explanation
=======================================================
Even though the class information changes at the 
confluence point in the second iteration, it remains
the same after each instructions. But for convergence
we can ignore the classes at the confluence points,
so we reach the fix point in two iterations for this 
case.


=======================================================
Program (LLVM Pseudo Code)
=======================================================
T1 <- 0
T2 <- 0

label:
    T1 <- 1
    goto label


=======================================================
Expected Result
=======================================================

====================================================================================================
Renamed Code
====================================================================================================
BasicBlock: BB1		[Predecessors: ]
  %T1 = alloca i32, align 4
  %T2 = alloca i32, align 4
  store i32 0, i32* %T1, align 4
  store i32 0, i32* %T2, align 4
  br label %BB2

BasicBlock: BB2		[Predecessors: BB1 BB2 ]
  store i32 1, i32* %T1, align 4
  br label %BB2

BasicBlock: BB3		[Predecessors: ]
  ret void



====================================================================================================
Herbrand Equivalence Computation
====================================================================================================


====================================================================================================
Iteration 1
====================================================================================================
Start of basic block BB1		[Confluence of ]
{1}, {0}, {T1}, {T2}, {1 + 1}, {1 + 0}, {1 + T1}, {1 + T2}, {0 + 1}, {0 + 0}, {0 + T1}, {0 + T2}, {T1 + 1}, {T1 + 0}, {T1 + T1}, {T1 + T2}, {T2 + 1}, {T2 + 0}, {T2 + T1}, {T2 + T2}, 

  %T1 = alloca i32, align 4
{1}, {0}, {T1}, {T2}, {1 + 1}, {1 + 0}, {1 + T1}, {1 + T2}, {0 + 1}, {0 + 0}, {0 + T1}, {0 + T2}, {T1 + 1}, {T1 + 0}, {T1 + T1}, {T1 + T2}, {T2 + 1}, {T2 + 0}, {T2 + T1}, {T2 + T2}, 

  %T2 = alloca i32, align 4
{1}, {0}, {T1}, {T2}, {1 + 1}, {1 + 0}, {1 + T1}, {1 + T2}, {0 + 1}, {0 + 0}, {0 + T1}, {0 + T2}, {T1 + 1}, {T1 + 0}, {T1 + T1}, {T1 + T2}, {T2 + 1}, {T2 + 0}, {T2 + T1}, {T2 + T2}, 

  store i32 0, i32* %T1, align 4
{1}, {0, T1}, {T2}, {1 + 1}, {1 + 0, 1 + T1}, {1 + T2}, {0 + 1, T1 + 1}, {0 + 0, 0 + T1, T1 + 0, T1 + T1}, {0 + T2, T1 + T2}, {T2 + 1}, {T2 + 0, T2 + T1}, {T2 + T2}, 

  store i32 0, i32* %T2, align 4
{1}, {0, T1, T2}, {1 + 1}, {1 + 0, 1 + T1, 1 + T2}, {0 + 1, T1 + 1, T2 + 1}, {0 + 0, 0 + T1, 0 + T2, T1 + 0, T1 + T1, T1 + T2, T2 + 0, T2 + T1, T2 + T2}, 

  br label %BB2
{1}, {0, T1, T2}, {1 + 1}, {1 + 0, 1 + T1, 1 + T2}, {0 + 1, T1 + 1, T2 + 1}, {0 + 0, 0 + T1, 0 + T2, T1 + 0, T1 + T1, T1 + T2, T2 + 0, T2 + T1, T2 + T2}, 

Start of basic block BB2		[Confluence of BB1 BB2 ]
{1}, {0, T1, T2}, {1 + 1}, {1 + 0, 1 + T1, 1 + T2}, {0 + 1, T1 + 1, T2 + 1}, {0 + 0, 0 + T1, 0 + T2, T1 + 0, T1 + T1, T1 + T2, T2 + 0, T2 + T1, T2 + T2}, 

  store i32 1, i32* %T1, align 4
{1, T1}, {0, T2}, {1 + 1, 1 + T1, T1 + 1, T1 + T1}, {1 + 0, 1 + T2, T1 + 0, T1 + T2}, {0 + 1, 0 + T1, T2 + 1, T2 + T1}, {0 + 0, 0 + T2, T2 + 0, T2 + T2}, 

  br label %BB2
{1, T1}, {0, T2}, {1 + 1, 1 + T1, T1 + 1, T1 + T1}, {1 + 0, 1 + T2, T1 + 0, T1 + T2}, {0 + 1, 0 + T1, T2 + 1, T2 + T1}, {0 + 0, 0 + T2, T2 + 0, T2 + T2}, 

Start of basic block BB3		[Confluence of ]
{1}, {0}, {T1}, {T2}, {1 + 1}, {1 + 0}, {1 + T1}, {1 + T2}, {0 + 1}, {0 + 0}, {0 + T1}, {0 + T2}, {T1 + 1}, {T1 + 0}, {T1 + T1}, {T1 + T2}, {T2 + 1}, {T2 + 0}, {T2 + T1}, {T2 + T2}, 

  ret void
{1}, {0}, {T1}, {T2}, {1 + 1}, {1 + 0}, {1 + T1}, {1 + T2}, {0 + 1}, {0 + 0}, {0 + T1}, {0 + T2}, {T1 + 1}, {T1 + 0}, {T1 + T1}, {T1 + T2}, {T2 + 1}, {T2 + 0}, {T2 + T1}, {T2 + T2}, 

====================================================================================================
Iteration 2
====================================================================================================
Start of basic block BB1		[Confluence of ]
{1}, {0}, {T1}, {T2}, {1 + 1}, {1 + 0}, {1 + T1}, {1 + T2}, {0 + 1}, {0 + 0}, {0 + T1}, {0 + T2}, {T1 + 1}, {T1 + 0}, {T1 + T1}, {T1 + T2}, {T2 + 1}, {T2 + 0}, {T2 + T1}, {T2 + T2}, 

  %T1 = alloca i32, align 4
{1}, {0}, {T1}, {T2}, {1 + 1}, {1 + 0}, {1 + T1}, {1 + T2}, {0 + 1}, {0 + 0}, {0 + T1}, {0 + T2}, {T1 + 1}, {T1 + 0}, {T1 + T1}, {T1 + T2}, {T2 + 1}, {T2 + 0}, {T2 + T1}, {T2 + T2}, 

  %T2 = alloca i32, align 4
{1}, {0}, {T1}, {T2}, {1 + 1}, {1 + 0}, {1 + T1}, {1 + T2}, {0 + 1}, {0 + 0}, {0 + T1}, {0 + T2}, {T1 + 1}, {T1 + 0}, {T1 + T1}, {T1 + T2}, {T2 + 1}, {T2 + 0}, {T2 + T1}, {T2 + T2}, 

  store i32 0, i32* %T1, align 4
{1}, {0, T1}, {T2}, {1 + 1}, {1 + 0, 1 + T1}, {1 + T2}, {0 + 1, T1 + 1}, {0 + 0, 0 + T1, T1 + 0, T1 + T1}, {0 + T2, T1 + T2}, {T2 + 1}, {T2 + 0, T2 + T1}, {T2 + T2}, 

  store i32 0, i32* %T2, align 4
{1}, {0, T1, T2}, {1 + 1}, {1 + 0, 1 + T1, 1 + T2}, {0 + 1, T1 + 1, T2 + 1}, {0 + 0, 0 + T1, 0 + T2, T1 + 0, T1 + T1, T1 + T2, T2 + 0, T2 + T1, T2 + T2}, 

  br label %BB2
{1}, {0, T1, T2}, {1 + 1}, {1 + 0, 1 + T1, 1 + T2}, {0 + 1, T1 + 1, T2 + 1}, {0 + 0, 0 + T1, 0 + T2, T1 + 0, T1 + T1, T1 + T2, T2 + 0, T2 + T1, T2 + T2}, 

Start of basic block BB2		[Confluence of BB1 BB2 ]
{1}, {0, T2}, {T1}, {1 + 1}, {1 + 0, 1 + T2}, {1 + T1}, {0 + 1, T2 + 1}, {0 + 0, 0 + T2, T2 + 0, T2 + T2}, {0 + T1, T2 + T1}, {T1 + 1}, {T1 + 0, T1 + T2}, {T1 + T1}, 

  store i32 1, i32* %T1, align 4
{1, T1}, {0, T2}, {1 + 1, 1 + T1, T1 + 1, T1 + T1}, {1 + 0, 1 + T2, T1 + 0, T1 + T2}, {0 + 1, 0 + T1, T2 + 1, T2 + T1}, {0 + 0, 0 + T2, T2 + 0, T2 + T2}, 

  br label %BB2
{1, T1}, {0, T2}, {1 + 1, 1 + T1, T1 + 1, T1 + T1}, {1 + 0, 1 + T2, T1 + 0, T1 + T2}, {0 + 1, 0 + T1, T2 + 1, T2 + T1}, {0 + 0, 0 + T2, T2 + 0, T2 + T2}, 

Start of basic block BB3		[Confluence of ]
{1}, {0}, {T1}, {T2}, {1 + 1}, {1 + 0}, {1 + T1}, {1 + T2}, {0 + 1}, {0 + 0}, {0 + T1}, {0 + T2}, {T1 + 1}, {T1 + 0}, {T1 + T1}, {T1 + T2}, {T2 + 1}, {T2 + 0}, {T2 + T1}, {T2 + T2}, 

  ret void
{1}, {0}, {T1}, {T2}, {1 + 1}, {1 + 0}, {1 + T1}, {1 + T2}, {0 + 1}, {0 + 0}, {0 + T1}, {0 + T2}, {T1 + 1}, {T1 + 0}, {T1 + T1}, {T1 + T2}, {T2 + 1}, {T2 + 0}, {T2 + T1}, {T2 + T2}, 



====================================================================================================
Available Variable Computation
====================================================================================================


====================================================================================================
Iteration 1
====================================================================================================
  %T1 = alloca i32, align 4
	IN: 
	OUT: 

  %T2 = alloca i32, align 4
	IN: 
	OUT: 

  store i32 0, i32* %T1, align 4
	IN: 
	OUT: 

  store i32 0, i32* %T2, align 4
	IN: 
	OUT: 

  br label %BB2
	IN: 
	OUT: 

  store i32 1, i32* %T1, align 4
	IN: 
	OUT: 

  br label %BB2
	IN: 
	OUT: 

  ret void
	IN: 
	OUT: 



====================================================================================================
Iteration 2
====================================================================================================
  %T1 = alloca i32, align 4
	IN: 
	OUT: 

  %T2 = alloca i32, align 4
	IN: 
	OUT: 

  store i32 0, i32* %T1, align 4
	IN: 
	OUT: 

  store i32 0, i32* %T2, align 4
	IN: 
	OUT: 

  br label %BB2
	IN: 
	OUT: 

  store i32 1, i32* %T1, align 4
	IN: 
	OUT: 

  br label %BB2
	IN: 
	OUT: 

  ret void
	IN: 
	OUT: 



====================================================================================================
Removing Redundant Instructions
====================================================================================================


  %T1 = alloca i32, align 4
  => Instruction skipped


  %T2 = alloca i32, align 4
  => Instruction skipped


  store i32 0, i32* %T1, align 4
  => Instruction skipped


  store i32 0, i32* %T2, align 4
  => Instruction skipped


  br label %BB2
  => Instruction skipped


  store i32 1, i32* %T1, align 4
  => Instruction skipped


  br label %BB2
  => Instruction skipped


  ret void
  => Instruction skipped


====================================================================================================
Optimised Code
====================================================================================================
BasicBlock: BB1		[Predecessors: ]
  %T1 = alloca i32, align 4
  %T2 = alloca i32, align 4
  store i32 0, i32* %T1, align 4
  store i32 0, i32* %T2, align 4
  br label %BB2

BasicBlock: BB2		[Predecessors: BB1 BB2 ]
  store i32 1, i32* %T1, align 4
  br label %BB2

BasicBlock: BB3		[Predecessors: ]
  ret void
